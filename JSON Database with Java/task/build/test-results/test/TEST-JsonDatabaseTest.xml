<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="JsonDatabaseTest" tests="1" skipped="0" failures="0" errors="0" timestamp="2024-03-10T19:02:20" hostname="C14166" time="0.65">
  <properties/>
  <testcase name="start" classname="JsonDatabaseTest" time="0.65"/>
  <system-out><![CDATA[?[1;31m
Start test 1?[0m
Server started!
Client started!
Sent: {"type":"exit"}
Received: {"response":"OK"}
?[1;31m
Start test 2?[0m
?[1;31m
Start test 3?[0m
Server started!
Client started!
Sent: {"type":"get","key":"1"}
Received: {"response":"ERROR","reason":"No such key"}
Client started!
Sent: {"type":"set","key":"1","value":"Hello world!"}
Received: {"response":"OK"}
Client started!
Sent: {"type":"set","key":"1","value":"HelloWorld!"}
Received: {"response":"OK"}
Client started!
Sent: {"type":"get","key":"1"}
Received: {"response":"OK","value":"HelloWorld!"}
Client started!
Sent: {"type":"delete","key":"1"}
1
null
Received: {"response":"OK"}
Client started!
Sent: {"type":"delete","key":"1"}
1
null
Received: {"response":"ERROR","reason":"No such key"}
Client started!
Sent: {"type":"get","key":"1"}
Received: {"response":"ERROR","reason":"No such key"}
Client started!
Sent: {"type":"set","key":"text","value":"Some text here"}
Received: {"response":"OK"}
Client started!
Sent: {"type":"get","key":"text"}
Received: {"response":"OK","value":"Some text here"}
Client started!
Sent: {"type":"get","key":"56"}
Received: {"response":"ERROR","reason":"No such key"}
Client started!
Sent: {"type":"delete","key":"56"}
56
null
Received: {"response":"ERROR","reason":"No such key"}
Client started!
Sent: {"type":"delete","key":"100"}
100
null
Received: {"response":"ERROR","reason":"No such key"}
Client started!
Sent: {"type":"delete","key":"That key doesn\u0027t exist"}
That key doesn't exist
null
Received: {"response":"ERROR","reason":"No such key"}
Client started!
Sent: {"type":"set","key":"name","value":"Kate"}
Received: {"response":"OK"}
Client started!
Sent: {"type":"get","key":"name"}
Received: {"response":"OK","value":"Kate"}
Client started!
Sent: {"type":"delete","key":"name"}
name
null
Received: {"response":"OK"}
Client started!
Sent: {"type":"get","key":"name"}
Received: {"response":"ERROR","reason":"No such key"}
Client started!
Sent: {"type":"exit"}
Received: {"response":"OK"}
]]></system-out>
  <system-err><![CDATA[java.net.SocketException: Socket closed
	at java.base/sun.nio.ch.NioSocketImpl.endAccept(NioSocketImpl.java:694)
	at java.base/sun.nio.ch.NioSocketImpl.accept(NioSocketImpl.java:767)
	at java.base/java.net.ServerSocket.implAccept(ServerSocket.java:675)
	at java.base/java.net.ServerSocket.platformImplAccept(ServerSocket.java:641)
	at java.base/java.net.ServerSocket.implAccept(ServerSocket.java:617)
	at java.base/java.net.ServerSocket.implAccept(ServerSocket.java:574)
	at java.base/java.net.ServerSocket.accept(ServerSocket.java:532)
	at server.Main.main(Main.java:38)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.invokeMain(MainMethodExecutor.java:160)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.lambda$launch$1(MainMethodExecutor.java:188)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
java.net.SocketException: Socket closed
	at java.base/sun.nio.ch.NioSocketImpl.endAccept(NioSocketImpl.java:694)
	at java.base/sun.nio.ch.NioSocketImpl.accept(NioSocketImpl.java:767)
	at java.base/java.net.ServerSocket.implAccept(ServerSocket.java:675)
	at java.base/java.net.ServerSocket.platformImplAccept(ServerSocket.java:641)
	at java.base/java.net.ServerSocket.implAccept(ServerSocket.java:617)
	at java.base/java.net.ServerSocket.implAccept(ServerSocket.java:574)
	at java.base/java.net.ServerSocket.accept(ServerSocket.java:532)
	at server.Main.main(Main.java:38)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.invokeMain(MainMethodExecutor.java:160)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.lambda$launch$1(MainMethodExecutor.java:188)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
]]></system-err>
</testsuite>
